server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    root /var/www/app/public;
    index index.html index.htm;

    client_max_body_size 300m;
    client_body_timeout 900s;

    error_page  404              /index;


    # Node.js proxy
    location / {
        # Ищем файл в папке static (ее Docker собрал слизав у Node)
        # Если ничего не нашли выбрасываем прокси
        try_files /$uri $uri @nodeproxy;

        if ($request_method = 'OPTIONS') {
                        add_header 'Access-Control-Allow-Origin' '*';
                        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PATCH';
                        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                        add_header 'Access-Control-Max-Age' 1728000;
                        add_header 'Content-Type' 'text/plain; charset=utf-8';
                        add_header 'Content-Length' 0;
                        return 204;
                }
    }

    location @nodeproxy {
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 1m;
        proxy_connect_timeout 1m;
        # app это алиас для контейнера с Node.js
        proxy_pass http://app:4000;
    }
}
server {
    listen 8081 default_server;
    server_name localhost;

    index index.html index.htm;

    root /var/www/app/public;

    client_max_body_size 300m;
    client_body_timeout 900s;

    error_page  404              /;

    # Swagger proxy
    location / {
        # Ищем файл в папке static (ее Docker собрал слизав у Node)
        # Если ничего не нашли выбрасываем прокси
        try_files /$uri $uri @swaggerproxy;

        if ($request_method = 'OPTIONS') {
                        add_header 'Access-Control-Allow-Origin' '*';
                        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PATCH';
                        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                        add_header 'Access-Control-Max-Age' 1728000;
                        add_header 'Content-Type' 'text/plain; charset=utf-8';
                        add_header 'Content-Length' 0;
                        return 204;
                }
    }

    location @swaggerproxy {
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 1m;
        proxy_connect_timeout 1m;
        # app это алиас для контейнера с Node.js
        proxy_pass http://swagger:8080;
    }
}
